swagger: '2.0'
info:
  title: Loliboo API
  version: "1.0.0"
# the domain of the service
host: ec2-54-93-123-90.eu-central-1.compute.amazonaws.com
# array of all schemes that your API supports
schemes:
  - http
  - https
# will be prefixed to all paths
produces:
  - application/json
paths:
  /registration:
    post:
      summary: Registration
      tags:
        - User
      description: |
        The registration endpoint registers new user.
        
      parameters:
        - name: model
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserRegistrationModel'
      responses:
        200:
          description: Returns message 'ok'
          schema:
            $ref: '#/definitions/Message'
        400:
          description: User with this email already exist
          schema:
            $ref: '#/definitions/Error'
  /login:
    post:
      tags:
        - User
      description: |
        The login endpoint logins user
      parameters:
        - name: model
          in: body
          required: true
          schema: 
             $ref: '#/definitions/UserLoginModel'
      responses:
        200:
          description: Returns message 'ok'
          schema:
            $ref: '#/definitions/Message'
        400:
          schema:
            $ref: '#/definitions/Error'
          description: Invalid email or password
  /changeCredentials:
    post:
      summary: Changes Credentials
      description: Allows User to change his Credentials (such as Email and Password)
      parameters:
        - name: model
          in: body
          description: Only OldPassword is required
          schema: 
             $ref: '#/definitions/UserChangeCredentialsModel'
      tags:
        - User
      responses:
        200:
          description: Returns message 'ok'
          schema:
            $ref: '#/definitions/Message'
        400:
          description: Incorrect password or user with this email already exist
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
      security: 
        - LolibooAuth: []
  /getUser:
    post:
      summary: Returns User
      description: Returns information about the User requested by Email
      tags:
        - User
      parameters:
        - name: model
          in: body
          schema: 
            $ref: '#/definitions/UserOnlyEmailModel'
          description: Email of the User
          required: true
      responses:
        200:
          description: Profile information for a user
          schema:
            $ref: '#/definitions/UserToSendModel'
        400:
          description: User with this email doesn't exist
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
      security: 
       - LolibooAuth: []
  /myProfile:
    get:
      summary: Returns current User
      description: Returns information about the current User
      tags:
        - User
      responses:
        200:
          description: Profile information for a user
          schema:
            $ref: '#/definitions/UserToSendModel'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
      security: 
       - LolibooAuth: []
  /logOff:
    get:
      summary: Logs off
      description: Logs User off
      tags:
        - User
      responses:
        200:
          description: Returns message 'ok'
          schema:
            $ref: '#/definitions/Message'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
      security: 
       - LolibooAuth: []
  /changeInfo:
    post:
      summary: Changes Info
      description: Allows the user to change his information besides Email and Password
      parameters:
        - name: model
          in: body
          description: Only Email is required
          schema:
            $ref: '#/definitions/UserChangeInfoModel'
      tags:
        - User
      responses:
        200:
          description: Returns message 'ok'
          schema:
            $ref: '#/definitions/Message'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
        - LolibooAuth: []
  /addProject:
    post:
      summary: Adds new project
      description: Adds new project & adds creator in project as member
      parameters:
        - name: model
          required: true
          in: body
          schema:
            $ref: '#/definitions/AddProjectModel'
      tags:
        - Project
      responses:
        200:
          description: Returns project id
          schema:
            $ref: '#/definitions/ObjectId'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
        - LolibooAuth: []
  /getMyProjects:
    get:
      summary: Returns projects of user
      description: Returns projects of user
      tags:
        - Project
      responses:
        200:
          description: Profile information for a user
          schema:
            $ref: '#/definitions/GetProjectArray'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
       - LolibooAuth: []
  /changeProject:
    post:
      summary: Allows to change project
      description: Allows to change properties of a particular project
      parameters:
        - name: model
          required: true
          in: body
          schema:
            $ref: '#/definitions/ChangeProjectModel'
      tags:
        - Project
      responses:
        200:
          description: Returns message 'ok'
          schema:
            $ref: '#/definitions/Message'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
       - LolibooAuth: []
  /deleteProject:
    post:
      summary: Removes project
      description: Removes project
      parameters:
        - name: model
          required: true
          in: body
          schema:
            $ref: '#/definitions/DeleteProjectModel'
      tags:
        - Project
      responses:
        200:
          description: Returns message 'ok'
          schema:
            $ref: '#/definitions/Message'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
       - LolibooAuth: []
  /inviteUserToProject:
    post:
      summary: Invites user to project
      description: Sends invitation from project to user
      parameters:
        - name: model
          required: true
          in: body
          schema:
            $ref: '#/definitions/InviteUserToProjectModel'
      tags:
        - Project
      responses:
        200:
          description: Returns message 'ok'
          schema:
            $ref: '#/definitions/Message'
        400:
          description: User is already in the project or User has already been invited
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
       - LolibooAuth: []
  /acceptInvitation:
    post:
      summary: Invites user to project
      description: Sends invitation from project to user
      parameters:
        - name: model
          required: true
          in: body
          schema:
            $ref: '#/definitions/AcceptInvitationModel'
      tags:
        - Project
      responses:
        200:
          description: Returns message 'ok'
          schema:
            $ref: '#/definitions/Message'
        400:
          description: You are already in the project
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
       - LolibooAuth: []
  /rejectInvitation:
    post:
      summary: Rejects invitation
      description: Rejects invitation
      parameters:
        - name: model
          required: true
          in: body
          schema:
            $ref: '#/definitions/RejectInvitationModel'
      tags:
        - Project
      responses:
        200:
          description: Returns message 'ok'
          schema:
            $ref: '#/definitions/Message'
        400:
          description: You are already in the project
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
       - LolibooAuth: []
  /getAllInvitations:
    get:
      summary: Returns all invitations to user
      description: Returns all invitations to user
      tags:
        - Project
      responses:
        200:
          description: Returns nothing
          schema:
            $ref: '#/definitions/InvitationArray'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
       - LolibooAuth: []
  /deleteUserFromProject:
    post:
      summary: Removes user from project
      description: Removes user from project
      parameters:
        - name: model
          required: true
          in: body
          schema:
            $ref: '#/definitions/DeleteUserFromProjectModel'
      tags:
        - Project
      responses:
        200:
          description: Returns message 'ok'
          schema:
            $ref: '#/definitions/Message'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
       - LolibooAuth: []
  /deleteYourselfFromProject:
    post:
      summary: Removes you from project
      description: Removes you from project
      parameters:
        - name: model
          required: true
          in: body
          schema:
            $ref: '#/definitions/DeleteYourselfFromProjectModel'
      tags:
        - Project
      responses:
        200:
          description: Returns message 'ok'
          schema:
            $ref: '#/definitions/Message'
        400:
          description: You are the last user in the project
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
       - LolibooAuth: []
  /getProject:
    post:
      summary: Get project by id
      description: Get project by id
      parameters:
        - name: model
          required: true
          in: body
          schema:
            $ref: '#/definitions/GetProjectModel'
      tags:
        - Project
      responses:
        200:
          description: Returns project
          schema:
            $ref: '#/definitions/ProjectToSendFullModel'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
       - LolibooAuth: []     
  /getAllUsersInProject:
    post:
      summary: Get users by id of project
      description: Get users by id of project
      parameters:
        - name: model
          required: true
          in: body
          schema:
            $ref: '#/definitions/GetProjectModel'
      tags: 
        - Project
      responses:
        200:
          description: Returns list of users
          schema:
            $ref: '#/definitions/UserToSendArray'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
       - LolibooAuth: []
  /addBoard:
    post:
      summary: Add board
      description: Add board to project
      parameters:
        - name: model
          required: true
          in: body
          schema:
            $ref: '#/definitions/AddBoardModel'
      tags: 
        - Board
      responses:
        200:
          description: Returns id of board
          schema:
            $ref: '#/definitions/ObjectId'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
       - LolibooAuth: []
  /changeBoard:
    post:
      summary: Change board
      description: Change name and other information of board
      parameters:
        - name: model
          required: true
          in: body
          schema:
            $ref: '#/definitions/ChangeBoardModel'
      tags: 
        - Board
      responses:
        200:
          description: Returns message "ok"
          schema:
            $ref: '#/definitions/Message'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
       - LolibooAuth: []
  /deleteBoard:
    post:
      summary: Delete board
      description: Delete board
      parameters:
        - name: model
          required: true
          in: body
          schema:
            $ref: '#/definitions/DeleteBoardModel'
      tags: 
        - Board
      responses:
        200:
          description: Returns message "ok"
          schema:
            $ref: '#/definitions/Message'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
       - LolibooAuth: []
  /addUserToBoard:
    post:
      summary: Add user to board
      description: Add user to board
      parameters:
        - name: model
          required: true
          in: body
          schema:
            $ref: '#/definitions/AddUserToBoardModel'
      tags: 
        - Board
      responses:
        200:
          description: Returns message "ok"
          schema:
            $ref: '#/definitions/Message'
        400:
          description: User is already in board
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
       - LolibooAuth: []
  /deleteUserFromBoard:
    post:
      summary: Delete user from board
      description: Delete user from board
      parameters:
        - name: model
          required: true
          in: body
          schema:
            $ref: '#/definitions/DeleteUserFromBoardModel'
      tags: 
        - Board
      responses:
        200:
          description: Returns message "ok"
          schema:
            $ref: '#/definitions/Message'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
       - LolibooAuth: []
  /getUsersInBoard:
    post:
      summary: Get users by id of board
      description: Get users by id of board
      parameters:
        - name: model
          required: true
          in: body
          schema:
            $ref: '#/definitions/GetUsersInBoardModel'
      tags: 
        - Board
      responses:
        200:
          description: Returns list of users
          schema:
            $ref: '#/definitions/UserToSendArray'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
       - LolibooAuth: []
  /deleteYourselfFromBoard:
    post:
      summary: Delete yourself from board
      description: Delete yourself from board
      parameters:
        - name: model
          required: true
          in: body
          schema:
            $ref: '#/definitions/DeleteYourselfFromBoardModel'
      tags: 
        - Board
      responses:
        200:
          description: Returns message "ok"
          schema:
            $ref: '#/definitions/Message'
        400:
          description: You are the last user in the board
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
       - LolibooAuth: []
  /getBoard:
    post:
      summary: Return board by id
      description: Return board by id
      parameters:
        - name: model
          required: true
          in: body
          schema:
            $ref: '#/definitions/GetBoardModel'
      tags: 
        - Board
      responses:
        200:
          description: Returns board
          schema:
            $ref: '#/definitions/BoardToSendFullModel'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
       - LolibooAuth: []
  /getMyBoards:
    get:
      summary: Return boards of current user
      description: Return board of current user
      tags: 
        - Board
      responses:
        200:
          description: Returns array of boards
          schema:
            $ref: '#/definitions/GetBoardArray'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
       - LolibooAuth: []
  /addColumn:
    post:
      summary: Add column
      description: Add column to board
      parameters:
        - name: model
          required: true
          in: body
          schema:
            $ref: '#/definitions/AddColumnModel'
      tags: 
        - Column
      responses:
        200:
          description: Returns id of column
          schema:
            $ref: '#/definitions/ObjectId'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
       - LolibooAuth: []
  /changeColumn:
    post:
      summary: Change column
      description: Change name and other information of column
      parameters:
        - name: model
          required: true
          in: body
          schema:
            $ref: '#/definitions/ChangeColumnModel'
      tags: 
        - Column
      responses:
        200:
          description: Returns message "ok"
          schema:
            $ref: '#/definitions/Message'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
       - LolibooAuth: []
  /deleteColumn:
    post:
      summary: Delete column
      description: Delete column
      parameters:
        - name: model
          required: true
          in: body
          schema:
            $ref: '#/definitions/DeleteColumnModel'
      tags: 
        - Column
      responses:
        200:
          description: Returns message "ok"
          schema:
            $ref: '#/definitions/Message'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
       - LolibooAuth: []
  /moveColumn:
    post:
      summary: Moves column
      description: Moves column to another position
      parameters:
        - name: model
          required: true
          in: body
          schema:
            $ref: '#/definitions/MoveColumnModel'
      tags: 
        - Column
      responses:
        200:
          description: Returns message "ok"
          schema:
            $ref: '#/definitions/Message'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
       - LolibooAuth: []
  /addCard:
    post:
      summary: Add card
      description: Add card to project
      parameters:
        - name: model
          required: true
          in: body
          schema:
            $ref: '#/definitions/AddCardModel'
      tags: 
        - Card
      responses:
        200:
          description: Returns id of card
          schema:
            $ref: '#/definitions/ObjectId'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
       - LolibooAuth: []
  /changeCard:
    post:
      summary: Change card
      description: Change name and other information of card
      parameters:
        - name: model
          required: true
          in: body
          schema:
            $ref: '#/definitions/ChangeCardModel'
      tags: 
        - Card
      responses:
        200:
          description: Returns message "ok"
          schema:
            $ref: '#/definitions/Message'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
       - LolibooAuth: []
  /deleteCard:
    post:
      summary: Delete card
      description: Delete card
      parameters:
        - name: model
          required: true
          in: body
          schema:
            $ref: '#/definitions/DeleteCardModel'
      tags: 
        - Card
      responses:
        200:
          description: Returns message "ok"
          schema:
            $ref: '#/definitions/Message'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
       - LolibooAuth: []
  /addUserToCard:
    post:
      summary: Add user to card
      description: Add user to card
      parameters:
        - name: model
          required: true
          in: body
          schema:
            $ref: '#/definitions/AddUserToCardModel'
      tags: 
        - Card
      responses:
        200:
          description: Returns message "ok"
          schema:
            $ref: '#/definitions/Message'
        400:
          description: User is already in board
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
       - LolibooAuth: []
  /deleteUserFromCard:
    post:
      summary: Delete user from card
      description: Delete user from card
      parameters:
        - name: model
          required: true
          in: body
          schema:
            $ref: '#/definitions/DeleteUserFromCardModel'
      tags: 
        - Card
      responses:
        200:
          description: Returns message "ok"
          schema:
            $ref: '#/definitions/Message'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
       - LolibooAuth: []
  /getUsersInCard:
    post:
      summary: Get users by id of card
      description: Get users by id of card
      parameters:
        - name: model
          required: true
          in: body
          schema:
            $ref: '#/definitions/GetUsersInCardModel'
      tags: 
        - Card
      responses:
        200:
          description: Returns list of users
          schema:
            $ref: '#/definitions/UserToSendArray'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
       - LolibooAuth: []
  /deleteYourselfFromCard:
    post:
      summary: Delete yourself from card
      description: Delete yourself from card
      parameters:
        - name: model
          required: true
          in: body
          schema:
            $ref: '#/definitions/DeleteYourselfFromCardModel'
      tags: 
        - Card
      responses:
        200:
          description: Returns message "ok"
          schema:
            $ref: '#/definitions/Message'
        400:
          description: You are the last user in the board
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
       - LolibooAuth: []
  /getCard:
    post:
      summary: Return card by id
      description: Return card by id
      parameters:
        - name: model
          required: true
          in: body
          schema:
            $ref: '#/definitions/GetCardModel'
      tags: 
        - Card
      responses:
        200:
          description: Returns card
          schema:
            $ref: '#/definitions/CardToSendFullModel'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
       - LolibooAuth: []
  /getMyCards:
    get:
      summary: Return cards of current user
      description: Return cards of current user
      tags: 
        - Card
      responses:
        200:
          description: Returns array of cards
          schema:
            $ref: '#/definitions/CardToSendLightArray'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
       - LolibooAuth: []
  /moveCardInOtherColumn:
    post:
      summary: Moves card in another column
      description: Moves card in another column
      parameters:
        - name: model
          required: true
          in: body
          schema:
            $ref: '#/definitions/MoveCardInOtherColumnModel'
      tags: 
        - Card
      responses:
        200:
          description: Returns message "ok"
          schema:
            $ref: '#/definitions/Message'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
       - LolibooAuth: []
  /moveCard:
    post:
      summary: Moves card
      description: Moves card to another position
      parameters:
        - name: model
          required: true
          in: body
          schema:
            $ref: '#/definitions/MoveCardModel'
      tags: 
        - Card
      responses:
        200:
          description: Returns message "ok"
          schema:
            $ref: '#/definitions/Message'
        401:
          description: Authorization has been denied for this request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
      security: 
       - LolibooAuth: []
securityDefinitions:
  LolibooAuth:
    type: basic
    description: Authentication using black magic
definitions:
  UserChangeCredentialsModel:
    type: object
    properties:
      NewEmail:
        type: string
      OldPassword:
        type: string
      NewPassword:
        type: string
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
  UserToSendModel:
    type: object
    properties:
      Email: 
        type: string
      Name:
        type: string
  UserRegistrationModel:
    type: object
    properties:
      Email:
        type: string
      Name:
        type: string
      Password:
        type: string  
  UserChangeInfoModel:
    type: object
    properties:
      Name:
        type: string
  UserLoginModel:
    type: object
    properties:
      Password:
        type: string
      Email:
        type: string
  UserOnlyEmailModel:
    type: object
    properties:
      Email:
        type: string
  AcceptInvitationModel:
    type: object
    properties:
      ProjectId:
        type: string
      UserEmail:
        type: string
  AddProjectModel:
    type: object
    properties:
      Name: 
        type: string
      UserEmail: 
        type: string
  ChangeProjectModel:
    type: object
    properties:
      ProjectId:
        type: string
      Name:
        type: string
  DeleteProjectModel:
    type: object
    properties:
      ProjectId:
        type: string
  DeleteUserFromProjectModel:
    type: object
    properties:
      UserEmail:
        type: string
      ProjectId:
        type: string
  DeleteYourselfFromProjectModel:
    type: object
    properties:
      ProjectId:
        type: string
  GetProjectModel:
    type: object
    properties:
      ProjectId:
        type: string
  InvitationModel:
    type: object
    properties:
      ProjectId:
        type: string
  InviteUserToProjectModel:
    type: object
    properties:
      EmailRecipient:
        type: string
      ProjectId:
        type: string
  ProjectToSendLightModel:
    type: object
    properties:
      ProjectId:
        type: string
      Name:
        type: string
  ProjectToSendFullModel:
    type: object
    properties:
      ProjectId:
        type: string
      Name:
        type: string
      Boards:
        $ref: '#/definitions/GetBoardArray'
  RejectInvitationModel:
    type: object
    properties:
      ProjectId:
        type: string
      UserEmail:
        type: string
  AddBoardModel:
    type: object
    properties:
      ProjectId:
        type: string
      Name:
        type: string
  ChangeBoardModel:
    type: object
    properties:
      BoardId:
        type: string
      Name:
        type: string
  DeleteBoardModel:
    type: object
    properties:
      BoardId:
        type: string
  AddUserToBoardModel:
    type: object
    properties:
      BoardId:
        type: string
      UserEmail:
        type: string
  DeleteUserFromBoardModel:
    type: object
    properties:
      BoardId:
        type: string
      UserEmail:
        type: string
  DeleteYourselfFromBoardModel:
    type: object
    properties:
      BoardId:
        type: string
  GetUsersInBoardModel:
    type: object
    properties:
      BoardId:
        type: string
  BoardToSendLightModel:
    type: object
    properties:
      BoardId:
        type: string
      Name:
        type: string
  BoardToSendFullModel:
    type: object
    properties:
      BoardId:
        type: string
      Name:
        type: string
  GetBoardModel:
    type: object
    properties:
      BoardId:
        type: string
  AddColumnModel:
    type: object
    properties:
      Name:
        type: string
      BoardId:
        type: string
  DeleteColumnModel:
    type: object
    properties:
      ColumnId:
        type: string
  ChangeColumnModel:
    type: object
    properties:
      ColumnId:
        type: string
      Name:
        type: string
  MoveColumnModel:
    type: object
    properties:
      ColumnId:
        type: string
      NewPosition:
        type: integer	
  ColumnToSendModel:
    type: object
    properties:
      ColumnId:
        type: string
      Name:
        type: string
      Position:
        type: integer
      Cards:
        $ref: '#/definitions/CardToSendLightArray'
  AddCardModel:
    type: object
    properties:
      ColumnId:
        type: string
      Name:
        type: string
  DeleteCardModel:
    type: object
    properties:
      CardId:
        type: string
  ChangeCardModel:
    type: object
    properties:
      CardId:
        type: string 
      Name:
        type: string 
      Description:
        type: string 
  MoveCardInOtherColumnModel:
    type: object
    properties:
      CardId:
        type: string 
      NewColumnId:
        type: string 
      NewPosition:
        type: integer
  MoveCardModel:
    type: object
    properties:
      CardId:
        type: string 
      NewPosition:
        type: integer
  AddUserToCardModel:
    type: object
    properties:
      CardId:
        type: string 
      UserEmail:
        type: string
      UserId:
        type: string 	
  GetCardModel:
    type: object
    properties:
      CardId:
        type: string 
  GetUsersInCardModel:
    type: object
    properties:
      CardId:
        type: string 
  CardToSendLightModel:
    type: object
    properties:
      ColumnId:
        type: string 
      Name:
        type: string 
      Position:
        type: integer
  CardToSendFullModel:
    type: object
    properties:
      ColumnId:
        type: string 
      Name:
        type: string 
      Description:
        type: string
  DeleteUserFromCardModel:
    type: object
    properties:
      CardId:
        type: string 
      UserEmail:
        type: string
      UserId:
        type: string 
  DeleteYourselfFromCardModel:
    type: object
    properties:
      CardId:
        type: string 
      UserId:
        type: string  
    
  CardToSendLightArray:
    type: array
    items:
      $ref: '#/definitions/CardToSendLightModel'
  GetBoardArray:
    type: array
    items:
      $ref: '#/definitions/BoardToSendLightModel'
  GetProjectArray:
    type: array
    items:
      $ref: '#/definitions/ProjectToSendLightModel'
  InvitationArray:
    type: array
    items:
      $ref: '#/definitions/InvitationModel'
  UserToSendArray:
    type: array
    items:
      $ref: '#/definitions/UserToSendModel'
  Message:
    type: string
    description: 'Ok'
  ObjectId:
    type: string